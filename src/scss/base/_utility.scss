// ============================================================
//  Name:            Utility
//  Description:     Utilities collection
//
//  Component:      `#{$prefix}panel-`
//                  `#{$prefix}clearfix`
//                  `#{$prefix}float-*`
//                  `#{$prefix}overflow-*`
//                  `#{$prefix}resize-*`
//                  `#{$prefix}display-*`
//                  `#{$prefix}responsive-*`
//                  `#{$prefix}preserve-width`
//                  `#{$prefix}border-*`
//                  `#{$prefix}box-shadow-*`
//
// States:          `#{$prefix}disabled`
//                  `#{$prefix}drage`
//                  `#{$prefix}dragover`
//                  `#{$prefix}preserve`
//
// ============================================================

// Variables
// ============================================================

$panel-scrollable-height: 170px !default;
$panel-scrollable-padding: 10px !default;
$panel-scrollable-border-width: border(width) !default;
$panel-scrollable-border: border(color) !default;
$panel-background-color: $wrapper !default;

$border-rounded-border-radius: 5px !default;

$box-shadow-duration: 0.1s !default;

$box-shadow-bottom-height: 30px !default;
$box-shadow-bottom-border-radius: 100% !default;
$box-shadow-bottom-background: #444444 !default;
$box-shadow-bottom-blur: 20px !default;

$dropcap-margin-right: 10px !default;
$dropcap-font-size: ((font(line-height) * 3) * 1em) !default;

$logo-font-size: font-size(large) !default;
$logo-font-family: font(family) !default;
$logo-color: color(default) !default;
$logo-hover-color: color(default) !default;

$dragover-box-shadow: 0 0 20px rgba(100, 100, 100, 0.3) !default;

/* ============================================================
   Component: Utility
   ============================================================ */

/* Panel
   ============================================================ */

.#{$prefix}panel {
	position: relative;
	box-sizing: border-box;
	background-color: $panel-background-color;
}

/*
 * Micro clearfix
 */

.#{$prefix}panel {
	@include clearfix;
}

/*
 * Remove margin from the last-child
 */

.#{$prefix}panel > :last-child {
	margin-bottom: 0;
}

/*
 *
 */

.#{$prefix}panel-scrollable {
	height: $panel-scrollable-height;
	padding: $panel-scrollable-padding;
	border: $panel-scrollable-border-width solid $panel-scrollable-border;
	overflow: auto;
	-webkit-overflow-scrolling: touch;
	resize: both;
}

/* Cleafix
   ============================================================ */

/*
 * 1. `table-cell` is used with `::before` because `table` creates a 1px gap
 *     when it becomse a flex item, only in Webkit
 * `table` is used again with `::after` because `clear` only works with block
 *  elements.
 * Note: `display: block` with `overflow: hidden` is currently not working in
 * the latest Safari
 */

.#{$prefix}clearfix {
	@include clearfix;
}

/* Float
   ============================================================ */

/*
 * 1. Prevent content overflow
 */

.#{$prefix}float-left {
	float: left;
}

.#{$prefix}float-right {
	float: right;
}

/* 1 */
[class*='#{$prefix}float-'] {
	max-width: 100%;
}

/* Overflow
   ============================================================ */

.#{$prefix}overflow-hidden {
	overflow: hidden;
}

/*
 * Enable scrollbars  if content is clipped
 * Note: firefox ignores `padding-bottom` for the scrollable overflow
 * https://bugzilla.mozilla.org/show_bug.cgi?id=748518
 */

.#{$prefix}overflow-auto {
	overflow: auto;
	-webkit-overflow-scrolling: touch;
}

.#{$prefix}overflow-auto > :last-child {
	margin-bottom: 0;
}

/* Resize
   ============================================================ */

.#{$prefix}resize {
	resize: both;
}

.#{$prefix}resize-vertical {
	resize: vertical;
}

/* Display
   ============================================================ */

.#{$prefix}display-block {
	display: block !important;
}

.#{$prefix}display-inline {
	display: inline !important;
}

.#{$prefix}display-inline-block {
	display: inline-block !important;
}

.#{$prefix}display-none {
	display: none;
}

/* Inline
   ============================================================ */

/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Behave like most inline-block elements
 * 5. Clip child elements
 */

[class*='#{$prefix}inline'] {
	/* 1 */
	display: inline-block;

	/* 2 */
	position: relative;

	/* 3 */
	max-width: 100%;

	/* 4 */
	vertical-align: middle;
}

.#{$prefix}inline-clip {
	/* 5 */
	overflow: hidden;
}

/* Responsive objects
   ============================================================ */

/*
 * Preserve original dimensions
 * Because `img`, `video`, `canvas` and `audio` are already responsive by
 * default, see the Reboot component
 */

.#{$prefix}preserve-width,
.#{$prefix}preserve-width audio,
.#{$prefix}preserve-width canvas,
.#{$prefix}preserve-width img,
.#{$prefix}preserve-width svg,
.#{$prefix}preserve-width video {
	max-width: none;
}

/*
 * Responsiveness
 * Corrects `max-width` and `max-height` behavior if padding and border are used
 */

.#{$prefix}responsive-width,
.#{$prefix}responsive-height {
	box-sizing: border-box;
}

/*
 * 1. Set a maximum width `important` needed to override
 *   `#{$prefix}preserve-width img`
 * 2. Auto scale the height. Only needed if `height` attribute is present
 */

.#{$prefix}responsive-width {
	/* 1 */
	max-width: 100% !important;

	/* 2 */
	height: auto;
}

/* Border
   ============================================================ */

.#{$prefix}border-circle {
	border-radius: 50% !important;
}

.#{$prefix}border-pill {
	border-radius: 500px;
}

.#{$prefix}border-rounded {
	border-radius: $border-rounded-border-radius;
}

.#{$prefix}border-none {
	border: none !important;
}

.#{$prefix}border-top-none {
	border-top-left-radius: 0px !important;
	border-top-right-radius: 0px !important;
}

.#{$prefix}border {
	border: 3px solid color(primary);
}

.#{$prefix}border.#{$prefix}border-inverse {
	border-color: color(inverse);
}

/* Box-shadow
   ============================================================ */

.#{$prefix}box-shadow-small {
	box-shadow: box-shadow(small);
}

.#{$prefix}box-shadow-medium {
	box-shadow: box-shadow(medium);
}

.#{$prefix}box-shadow-large {
	box-shadow: box-shadow(large);
}

.#{$prefix}box-shadow-xlarge {
	box-shadow: box-shadow(xlarge);
}

/*
 * Hover
 */

[class*='#{$prefix}box-shadow-hover'] {
	transition: box-shadow $box-shadow-duration ease-in-out;
}

.#{$prefix}box-shadow-hover-small:hover {
	box-shadow: box-shadow(small);
}

.#{$prefix}box-shadow-hover-medium:hover {
	box-shadow: box-shadow(medium);
}

.#{$prefix}box-shadow-hover-large:hover {
	box-shadow: box-shadow(large);
}

.#{$prefix}box-shadow-hover-xlarge:hover {
	box-shadow: box-shadow(xlarge);
}

/* Not Allowed State
   ============================================================ */
.#{$prefix}not-allowed {
	pointer-events: not-allowed;
}

/* Disabled State
   ============================================================ */
.#{$prefix}disabled {
	pointer-events: none;
}

/* Drag State
   ============================================================ */
.#{$prefix}drag,
.#{$prefix}drag * {
	cursor: move;
}

.#{$prefix}drag iframe {
	pointer-events: none;
}

/* Dragover State
   ============================================================ */

/*
 * Create a box-shadow when dragging a file over the upload area
 */

.#{$prefix}dragover {
	box-shadow: $dragover-box-shadow;
}

/* Point State
   ============================================================ */
.#{$prefix}point,
.#{$prefix}point * {
	cursor: pointer;
}
