// ============================================================
//  Name:            Flex
//  Description:     Utilities for flex
//
//  Component:       `#{$prefix}flex-*`
//
// ============================================================

/* ============================================================
   Component: Flex
   ============================================================ */

.#{$prefix}flex {
	display: flex !important;
}

.#{$prefix}flex-inline {
	display: inline-flex;
}

/*
 * Remove pseudo elements created by micro clearfix as precautions
 */

.#{$prefix}flex:before,
.#{$prefix}flex:after,
.#{$prefix}flex-inline:before,
.#{$prefix}flex-inline:after {
	display: none;
}

/* Alignment
   ============================================================ */

/*
 * Align items along the main axis of the current line of the flex container.
 * Row: Horizontal
 */

@include create-flex-alignment;

/*
 * Align items in the cross of the current line of the flex container
 * Row: Vertical
 */

// Default

.#{$prefix}flex-stretch {
	align-items: stretch;
}

.#{$prefix}flex-top {
	align-items: flex-start;
}

.#{$prefix}flex-middle {
	align-items: center;
}

.#{$prefix}flex-bottom {
	align-items: flex-end;
}

/* Direction
   ============================================================ */

.#{$prefix}flex-row {
	flex-direction: row;
}

.#{$prefix}flex-row-reverse {
	flex-direction: row-reverse;
}

.#{$prefix}flex-column {
	flex-direction: column;
}

.#{$prefix}flex-column-reverse {
	flex-direction: column-reverse;
}

/* Wrap
   ============================================================ */

// Default
.#{$prefix}flex-nowrap {
	flex-wrap: nowrap;
}

.#{$prefix}flex-wrap {
	flex-wrap: wrap;
}

.#{$prefix}flex-wrap-reverse {
	flex-wrap: wrap-reverse;
}

// Default
.#{$prefix}flex-wrap-stretch {
	align-content: stretch;
}

.#{$prefix}flex-wrap-top {
	align-content: flex-start;
}

.#{$prefix}flex-wrap-middle {
	align-content: center;
}

.#{$prefix}flex-wrap-bottom {
	align-content: flex-end;
}

.#{$prefix}flex-wrap-between {
	align-content: space-between;
}

.#{$prefix}flex-wrap-around {
	align-content: space-around;
}

/* Item Ordering
   ============================================================ */

.#{$prefix}flex-first {
	order: -1;
}

.#{$prefix}flex-last {
	order: 99;
}

@include respond-to(small) {
	.#{$prefix}flex-first\@s {
		order: -1;
	}

	.#{$prefix}flex-last\@s {
		order: 99;
	}
}

@include respond-to(medium) {
	.#{$prefix}flex-first\@m {
		order: -1;
	}

	.#{$prefix}flex-last\@m {
		order: 99;
	}
}

@include respond-to(large) {
	.#{$prefix}flex-first\@l {
		order: -1;
	}

	.#{$prefix}flex-last\@l {
		order: 99;
	}
}

@include respond-to(xlarge) {
	.#{$prefix}flex-first\@xl {
		order: -1;
	}

	.#{$prefix}flex-last\@xl {
		order: 99;
	}
}

/* Item Dimensions
   ============================================================ */

/*
 * Initial: 0 1 auto
 * Content dimensions, but shrinks
 */

/*
 * No flex: 0 0 auto
 * Content dimensions
 */

.#{$prefix}flex-none {
	flex: none;
}

/*
 * Relative flex 1 1 auto
 * Space is allocated considering content
 */

.#{$prefix}flex-auto {
	flex: auto;
}

/*
 * Absolute Flex: 1 1 0%
 * Space is allocated solely based on flex
 */

.#{$prefix}flex-1 {
	flex: 1;
}
